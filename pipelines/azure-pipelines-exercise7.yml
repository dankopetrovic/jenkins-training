trigger:
  none

stages:
  - stage: 'Test'
    displayName: 'Test'
    jobs:
      - job: 'TestJob'
        displayName: 'Test Job'
        pool: 
          vmImage: 'ubuntu-latest'
        steps:
          - task: CmdLine@2
            displayName: Installs Cypress
            inputs:
              script: npm i
          - task: CmdLine@2
            displayName: Verifies Cypress
            inputs:
              script: npx cypress verify
          - task: CmdLine@2
            displayName: Displays Cypress Information
            inputs:
              script: npx cypress info
          - task: CmdLine@2
            displayName: 'Run Cypress tests'
            inputs:
              script: npx cypress run
            env:
              # avoid warnings about terminal
              TERM: xterm
          - task: PublishTestResults@2
            displayName: Publish Test Results
            condition: succeededOrFailed()
            inputs:
              testResultsFormat: 'JUnit'
              mergeTestResults: true
              testResultsFiles: '**/cypress/reports/junit/*.xml'
          - task: CmdLine@2
            displayName: 'Generate HTML report'
            inputs:
              script: |
                npm run merge_reports
                npm run generate_mochawesome_report
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/mochawesome-report'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              ArtifactName: 'HTML Report'
              publishLocation: 'Container'